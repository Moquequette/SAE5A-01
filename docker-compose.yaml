version: '3'

services:
  # Service Node.js avec Express pour le backend
  backend:
    image: node:18  # Utilise l'image Node.js version 18
    container_name: backend-container  # Nomme le conteneur backend-container
    working_dir: /app/backend  # Répertoire de travail dans le conteneur
    volumes:
      - ./backend:/app/backend  # Montage du dossier local dans le conteneur
    ports:
      - "3000:3000"  # Mappe le port 3000 du conteneur au port 3000 de l'hôte
    environment:
      MONGO_URI: mongodb://mongodb:27017  # Variable d'environnement pour l'URI de MongoDB
    command: bash -c "npm install && npm start"  # Commande à exécuter au démarrage
    networks:
      - web  # Connecte le service au réseau "web"
      - lan  # Connecte également au réseau "lan"

  # Service MongoDB
  mongodb:
    image: mongo:latest  # Utilise l'image la plus récente de MongoDB
    container_name: mongodb-container  # Nomme le conteneur mongodb-container
    ports:
      - "27017:27017"  # Mappe le port 27017 du conteneur à l'hôte
    networks:
      - web  # Connecte le service au réseau "web"
      - lan  # Connecte également au réseau "lan"

  # Service Node.js avec Express pour le frontend (facultatif)
  frontend:
    image: node:18  # Utilise l'image Node.js version 18
    container_name: frontend-container  # Nomme le conteneur frontend-container
    working_dir: /app/frontend  # Répertoire de travail dans le conteneur
    volumes:
      - ./frontend:/app/frontend  # Montage du dossier local dans le conteneur
    command: bash -c "npm install axios && npm install && npm run serve"  # Commande à exécuter au démarrage
    labels:
      - traefik.enable=true  # Active Traefik pour ce service
      # Configuration Traefik pour le routage et les certificats TLS
      - traefik.http.routers.mushroompy.entryPoints=websecure
      - traefik.http.routers.mushroompy.rule=Host(`mushroompy.jrcandev.netlib.re`)
      - traefik.http.routers.mushroompy.tls=true
      - traefik.http.routers.mushroompy.tls.certresolver=myresolver
      - traefik.http.services.mushroompy.loadbalancer.server.port=8080
    networks:
      - web  # Connecte le service au réseau "web"
      - lan  # Connecte également au réseau "lan"

networks:
  web:
    external: true  # Réseau "web" externe (défini en dehors de ce compose)
  lan:
    external: false  # Réseau "lan" local spécifique à ce compose